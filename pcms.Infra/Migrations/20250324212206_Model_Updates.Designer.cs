// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pcms.Infra;

#nullable disable

namespace pcms.Infra.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250324212206_Model_Updates")]
    partial class Model_Updates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pcms.Domain.Entities.Contribution", b =>
                {
                    b.Property<string>("ContributionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("ContributionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CumulativeContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CumulativeIntrestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MonthForContribution")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalCumulative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("YearForContribution")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContributionId");

                    b.HasIndex("MemberId");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("pcms.Domain.Entities.Member", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEligibleForBenefit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSAPin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = "eae1e136-b9fa-4684-a01f-25dcdc68f25a",
                            DateOfBirth = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            Employer = "NDPR",
                            IsActive = true,
                            IsDeleted = false,
                            IsEligibleForBenefit = false,
                            Name = "John Doe",
                            Phone = "23480102468635",
                            RSAPin = "PIN1234567890",
                            RegistrationDate = new DateTime(2025, 3, 24, 22, 22, 5, 807, DateTimeKind.Local).AddTicks(1517)
                        },
                        new
                        {
                            MemberId = "45a99bb0-4d5c-4bba-b221-a15b453e2a11",
                            DateOfBirth = new DateTime(1990, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            Employer = "NNPC",
                            IsActive = true,
                            IsDeleted = false,
                            IsEligibleForBenefit = false,
                            Name = "Jane Smith",
                            Phone = "2349876543210",
                            RSAPin = "PIN9993243989",
                            RegistrationDate = new DateTime(2025, 3, 24, 22, 22, 5, 807, DateTimeKind.Local).AddTicks(1527)
                        });
                });

            modelBuilder.Entity("pcms.Domain.Entities.Contribution", b =>
                {
                    b.HasOne("pcms.Domain.Entities.Member", null)
                        .WithMany("Contributions")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pcms.Domain.Entities.Member", b =>
                {
                    b.Navigation("Contributions");
                });
#pragma warning restore 612, 618
        }
    }
}
